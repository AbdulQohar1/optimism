generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model funding {
  id                  Int      @id @default(autoincrement())
  project_id          Int
  amount              Int
  funding_source      String?  @db.VarChar(255)
  funding_description String?  @db.VarChar(250)
  currency            String?  @db.VarChar(50)
  created_at          DateTime @default(now()) @db.Timestamp(6)
  project             project  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id                   Int                    @id(map: "projects_pkey") @default(autoincrement())
  project_id           String                 @unique(map: "projects_project_id_key") @db.VarChar(255)
  name                 String?                @db.VarChar(255)
  description          String?
  created_by           String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  total_fund           Int?                   @default(0)
  status               String?                @db.VarChar(50)
  project_logo_image   Bytes?
  project_logo_name    String?                @db.VarChar(120)
  project_banner_image Bytes?
  website_url          String?                @db.VarChar(255)
  funding              funding[]
  project_contribution project_contribution[]
  project_impact       project_impact[]
}

model project_contribution {
  id                     Int     @id @default(autoincrement())
  project_id             Int
  contribution           String
  dependecy_website_url  String? @db.VarChar(255)
  dependency_description String? @db.VarChar(120)
  project                project @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project_impact {
  id                     Int     @id @default(autoincrement())
  project_id             Int
  description            String?
  project                project @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}